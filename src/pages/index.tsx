import React from "react";
import Head from "next/head";
import { useState } from "react";
import styles from "../../styles/Home.module.css";
import output from "../declensions/output";
import Navbar from "../declensions/settings/navbar.js";

export default function Home() {
  const [verb, setVerb] = useState<string>("");
  const [presentDeclension, setPresentDeclension] =
    useState<React.ReactElement>();
  const [present, setPresent] = useState<boolean>(false);
  const [imperfect, setImperfect] = useState<boolean>(false);
  const [future, setFuture] = useState<boolean>(false);
  const [aorist, setAorist] = useState<boolean>(false);
  const [perfect, setPerfect] = useState<boolean>(false);
  const [pluperfect, setPluperfect] = useState<boolean>(false);
  const [active, setActive] = useState<boolean>(false);
  const [middle, setMiddle] = useState<boolean>(false);
  const [passive, setPassive] = useState<boolean>(false);
  const [indicative, setIndicative] = useState<boolean>(false);
  const [subjunctive, setSubjunctive] = useState<boolean>(false);
  const [optative, setOptative] = useState<boolean>(false);
  const [imperative, setImperative] = useState<boolean>(false);
  const [tense, setTense] = useState<boolean>(false);
  const [voice, setVoice] = useState<boolean>(false);
  const [mood, setMood] = useState<boolean>(false);
  const [error, setError] = useState<boolean>(false);
  const handleActive = () => {
    setActive(!active);
  };
  const handleMiddle = () => {
    setMiddle(!middle);
  };
  const handlePassive = () => {
    setPassive(!passive);
  };
  const handlePresent = () => {
    setPresent(!present);
  };
  const handleImperfect = () => {
    setImperfect(!imperfect);
  };
  const handleFuture = () => {
    setFuture(!future);
  };
  const handleAorist = () => {
    setAorist(!aorist);
  };
  const handlePerfect = () => {
    setPerfect(!perfect);
  };
  const handlePluperfect = () => {
    setPluperfect(!pluperfect);
  };
  const handleIndicative = () => {
    setIndicative(!indicative);
  };
  const handleSubjunctive = () => {
    setSubjunctive(!subjunctive);
  };
  const handleOptative = () => {
    setOptative(!optative);
  };
  const handleImperative = () => {
    setImperative(!imperative);
  };

  const isTenseSelected = () => {
    setTense(false);
    if (
      present ||
      imperfect ||
      aorist ||
      future ||
      perfect ||
      pluperfect === true
    ) {
      setTense(true);
    }
  };

  const isVoiceSelected = () => {
    setVoice(false);
    if (active || middle || passive === true) {
      setVoice(true);
    }
  };

  const isMoodSelected = () => {
    setMood(false);
    if (indicative || subjunctive || optative || imperative === true) {
      setMood(true);
    }
  };
  console.log("Tense selected is", tense);
  console.log("Voice selected is", voice);
  console.log("Mood selected is", mood);

  const submitForm = (e: any) => {
    e.preventDefault();
    // if (!tense && !voice && !mood) return;
    isTenseSelected(), isVoiceSelected(), isMoodSelected();

    if (tense === false || mood === false || voice === false) {
      // dispatch({type:"isErrorTrue", isErrorTrue: true });
      console.log("There is a problem")
      return
    } else {
      // dispatch({type:"isErrorTrue", isErrorTrue: false });
      setPresentDeclension(
        output({
          verb,
          active,
          middle,
          passive,
          indicative,
          subjunctive,
          optative,
          imperative,
          present,
          imperfect,
          future,
          aorist,
        })
      );
    }
  };

  console.log("error", error);

  return (
    <div className={styles.container}>
      <Navbar />
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>Smart Verb Declenator</h1>
        <fieldset>
          <input
            required
            id="verb"
            type="text"
            onChange={(e) => setVerb(e.target.value)}
            value={verb}
          />
          <fieldset>
            <h3>Choose Tense</h3>
            <div>
              <input
                required
                id="present"
                type="checkbox"
                name="declension"
                onClick={handlePresent}
              />
              <label htmlFor="present">Present</label>
            </div>
            <div>
              <input
                required
                id="imperfect"
                type="checkbox"
                name="declension"
                onClick={handleImperfect}
              />
              <label htmlFor="imperfect">Imperfect</label>
            </div>
            <div>
              <input
                required
                id="future"
                type="checkbox"
                name="declension"
                onClick={handleFuture}
              />
              <label htmlFor="future">Future</label>
            </div>
            <div>
              <input
                required
                id="aorist"
                type="checkbox"
                name="declension"
                onClick={handleAorist}
              />
              <label htmlFor="Aorist">Aorist</label>
            </div>
            <div>
              <input
                required
                id="perfect"
                type="checkbox"
                name="declension"
                onClick={handlePerfect}
              />
              <label htmlFor="perfect">Perfect</label>
            </div>
            <div>
              <input
                required
                id="pluperfect"
                type="checkbox"
                name="declension"
                onClick={handlePluperfect}
              />
              <label htmlFor="pluperfect">Pluperfect</label>
            </div>
            {error && !tense && <div>Please check at least one tense</div>}
          </fieldset>
          <fieldset>
            <h3>Voice</h3>
            <div>
              <input
                required
                id="active"
                type="checkbox"
                name="declension"
                onClick={handleActive}
              />
              <label htmlFor="active">Active</label>
            </div>
            <div>
              <input
                required
                id="middle"
                type="checkbox"
                name="declension"
                onClick={handleMiddle}
              />
              <label htmlFor="middle">Middle</label>
            </div>
            <div>
              <input
                required
                id="passive"
                type="checkbox"
                name="declension"
                onClick={handlePassive}
              />
              <label htmlFor="middle">Passive</label>
            </div>
            {error && !voice && <div>Please check at least one tense</div>}
          </fieldset>
          <fieldset>
            <h3>Mood</h3>
            <div>
              <input
                required
                id="indicative"
                type="checkbox"
                name="declension"
                onClick={handleIndicative}
              />
              <label htmlFor="indicative">Indicative</label>
            </div>
            <div>
              <input
                required
                id="subjunctive"
                type="checkbox"
                name="declension"
                onClick={handleSubjunctive}
              />
              <label htmlFor="subjunctive">Subjunctive</label>
            </div>
            <div>
              <input
                required
                id="optative"
                type="checkbox"
                name="declension"
                onClick={handleOptative}
              />
              <label htmlFor="optative">Optative</label>
            </div>
            <div>
              <input
                required
                id="imperative"
                type="checkbox"
                name="declension"
                onClick={handleImperative}
              />
              <label htmlFor="optative">Imperative</label>
            </div>
            {error && !mood && <div>Please check at least one tense</div>}
          </fieldset>
        </fieldset>
        <button id="verb" onClick={submitForm}>
          Submit
        </button>
        <div>
          {tense && voice && mood && verb.length ? presentDeclension : null}
        </div>
        <div>{error ? <div>Please check your options</div> : null}</div>
      </main>
    </div>
  );
}
